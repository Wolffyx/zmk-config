/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

///dts-v1/;
//#include <st/u5/stm32u575.dtsi>
//
//#include <dt-bindings/zmk/matrix_transform.h>
//
/// {
//	model = "stm32u575test";
//	compatible = "st,stm32u575";
//
//	chosen {
//		// zephyr,sram = &sram0;
//		// zephyr,flash = &flash0;
//		zmk,kscan = &kscan0;
//		zmk,matrix-transform = &default_transform;
//	};
//
//	transform: transform {
//		compatible = "zmk,matrix-transform";
//		columns = <3>;
//		rows = <4>;
//		map = <
//					  RC(0, 0) RC(0, 1) RC(0, 2)
//					  RC(1, 0) RC(1, 1) RC(1, 2)
//					  RC(2, 0) RC(2, 1) RC(2, 2)
//					  RC(3, 0) RC(3, 1) RC(3, 2)
//			  >;
//	};
//
//	kscan: kscan {
//		compatible = "zmk,kscan-gpio-matrix";
//		diode-direction = "col2row";
//		row-gpios
//		= <&gpioe 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
//		, <&gpioe 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
//		, <&gpioe 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
//		, <&gpiob 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
//		;
//		col-gpios
//		= <&gpioe 10 GPIO_ACTIVE_HIGH>
//		, <&gpioe 11 GPIO_ACTIVE_HIGH>
//		, <&gpioe 12 GPIO_ACTIVE_HIGH>
//		;
//	};
//
//};

// zephyr_udc0: &usb {
//     status = "okay";
// };

// &flash0 {
//     /*
//      * For more information, see:
//      * http://docs.zephyrproject.org/latest/guides/dts/index.html#flash-partitions
//      */
//     partitions {
//         compatible = "fixed-partitions";
//         #address-cells = <1>;
//         #size-cells = <1>;

//         /* Set 6Kb of storage at the end of the 256Kb of flash */
//         storage_partition: partition@3e800 {
//             reg = <0x0003e800 0x00001800>;
//         };
//     };
// };


/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/dts-v1/;
#include <st/u5/stm32u575.dtsi>
#include <st/u5/stm32u575vgtx-pinctrl.dtsi>
#include "arduino_r3_connector.dtsi"
#include <zephyr/dt-bindings/input/input-event-codes.h>

#include <dt-bindings/zmk/matrix_transform.h>

/ {
	model = "STM32U5 test (stm32)";
	compatible = "st,stm32u575", "st,stm32u5";

	chosen {
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zmk,kscan = &kscan;
		zmk,matrix_transform = &transform;
		// zephyr,console = &cdc_acm_uart;
		/* TODO: Enable once we support the IC for underglow
		zmk,underglow = &led_strip;
		 */
	};

	transform: transform {
		compatible = "zmk,matrix-transform";
		columns = <3>;
		rows = <4>;
		map = <
					  RC(0, 0) RC(0, 1) RC(0, 2)
					  RC(1, 0) RC(1, 1) RC(1, 2)
					  RC(2, 0) RC(2, 1) RC(2, 2)
					  RC(3, 0) RC(3, 1) RC(3, 2)
			  >;
	};

	kscan: kscan {
		compatible = "zmk,kscan-gpio-matrix";
		diode-direction = "col2row";
		row-gpios
		= <&gpioe 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
		, <&gpioe 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
		, <&gpioe 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
		, <&gpiob 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
		;
		col-gpios
		= <&gpioe 10 GPIO_ACTIVE_HIGH>
		, <&gpioe 11 GPIO_ACTIVE_HIGH>
		, <&gpioe 12 GPIO_ACTIVE_HIGH>
		;
	};
};


&clk_hsi48 {
	status = "okay";
};

&clk_lse {
	status = "okay";
};

&clk_msis {
	status = "okay";
	msi-range = <4>;
	msi-pll-mode;
};

&pll1 {
	div-m = <1>;
	mul-n = <80>;
	div-q = <2>;
	div-r = <2>;
	clocks = <&clk_msis>;
	status = "okay";
};

&rcc {
	clocks = <&pll1>;
	clock-frequency = <DT_FREQ_M(160)>;
	ahb-prescaler = <1>;
	apb1-prescaler = <1>;
	apb2-prescaler = <1>;
	apb3-prescaler = <1>;
};



&usart2 {
	pinctrl-0 = <&usart2_tx_pd5 &usart2_rx_pd6>;
	pinctrl-names = "default";
	current-speed = <115200>;
	status = "okay";
};

&i2c1 {
	pinctrl-0 = <&i2c1_scl_pb8 &i2c1_sda_pb9>;
	pinctrl-names = "default";
	status = "okay";
	clock-frequency = <I2C_BITRATE_FAST>;
};


&spi1 {
	pinctrl-0 = <&spi1_nss_pa4 &spi1_sck_pa5
				 &spi1_miso_pa6 &spi1_mosi_pa7>;
	pinctrl-names = "default";
	status = "okay";
};

&dac1 {
	/* CAUTION: DAC on PA4 may conflict with SPI1 NSS on same pin */
	pinctrl-0 = <&dac1_out1_pa4>;
	pinctrl-names = "default";
	status = "okay";
};

&adc1 {
	pinctrl-0 = <&adc1_in1_pc0>;
	pinctrl-names = "default";
	st,adc-clock-source = <ASYNC>;
	st,adc-prescaler = <4>;
	status = "okay";
};

&adc4 {
	pinctrl-0 = <&adc4_in18_pb0>;
	pinctrl-names = "default";
	st,adc-clock-source = <ASYNC>;
	st,adc-prescaler = <4>;
	status = "okay";
};

&timers3 {
	st,prescaler = <10000>;
	status = "okay";

	pwm3: pwm {
		pinctrl-0 = <&tim3_ch2_pc7>;
		pinctrl-names = "default";
		status = "okay";
	};
};

&timers4 {
	st,prescaler = <10000>;
	status = "okay";

	pwm4: pwm {
		pinctrl-0 = <&tim4_ch2_pb7>;
		pinctrl-names = "default";
		status = "okay";
	};
};

&iwdg {
	status = "okay";
};

&rng {
	status = "okay";
};

&fdcan1 {
	clocks = <&rcc STM32_CLOCK_BUS_APB1_2 0x00000200>,
			 <&rcc STM32_SRC_PLL1_Q FDCAN1_SEL(1)>;
	pinctrl-0 = <&fdcan1_rx_pd0 &fdcan1_tx_pd1>;
	pinctrl-names = "default";
	bus-speed = <125000>;
	bus-speed-data = <1000000>;
	status = "okay";
};

&vref1 {
	status = "okay";
};

&vbat4 {
	status = "okay";
};


&flash0 {
	/*
	 * For more information, see:
	 * http: //docs.zephyrproject.org/latest/guides/dts/index.html#flash-partitions
	 */
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		/* Set 6Kb of storage at the end of the 128Kb of flash */
		storage_partition: partition@3e800 {
			label = "storage";
			reg = <0x0001e800 0x00001800>;
		};
	};
};